What happens when you initialize a repository? Why do you need to do it?
When I initialize a repository, a git metadata file is created in the same directory. The file will eventually contain commit histories and data about different versions tied to each commit. When the repository is initialized it does not yet contain any commits.


How is the staging area different from the working directory and the repository?
What value do you think it offers?
I'm not sure how they are different exactly, but I would say that the staging area is the only place you can commit from and the place you can hold files temporarily as you're working with them. The staging area seems like a place that it would be fast and convenient to commit from, too. A commit would not affect the files or their commit history in the working directory.

How can you use the staging area to make sure you have one commit per logical
change? By comparing the changes I've made to the files version in working directory using a call to git diff to check on how the file has been changed.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
